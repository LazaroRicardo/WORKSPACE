package com.ricardo.controlers;

//controlador:
import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.ricardo.database.BBDD;

//anotación: metodo para modificar un comportamiento de una misma clase, esta dice cual es la ruta de escucha de este servlet:
// no puede haber 2 servlet con la misma ruta.
@WebServlet("/usuario")
public class UsuarioServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;

	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		
		int idU=Integer.parseInt(idUsuario);
		
		String idUsuario = request.getParameter("id");
		System.out.println("ID recibido:" + idUsuario);
		
		HttpSession session = request.getSession();

		// Si exsiste el dato usuario en sesion lo dejo pasar, sino lo redirijo a login,
		// sirve para que un usuario no se meta a una pagina siguiente sin haber añadido
		// contraseña si es que se conoce el URL de la pag siguiente y que al hacerlo le
		// redirija al login.
		if (session.getAttribute("usuario") != null) {
			BBDD bbdd = new BBDD();
			// En el request asocio: el atributo "losusuarios" se enlaza a la base de
			// datos[bbdd] y en la clase jsp si lo pongo con "${}" me saldrá lo que se
			// encuantra en bbdd
			request.setAttribute("losUsuarios", bbdd.usuarios);

			request.getRequestDispatcher("/listausuarios.jsp").forward(request, response);
		} else {
			response.sendRedirect("login");
		}
		
		// capturar parametro (siempre viene en modo string aunque sea un int inicialmente) creo una variable donde
		// recupero un parámetro y uso el syso para elcupirlo por la consola.
		
		//para transformar el idUsuario en un int en lugar de un string y poder añadirlo al get de mas abajo:
		
		// el new bbdd llama al "public BBDD()" de la clase "BBDD.java" pudiendo usar
		// sus parámetros públicos los que a su vez están relacionados con los privados.
		BBDD bbdd = new BBDD();

		request.setAttribute("elUsuario", bbdd.getUsuarioById(idU));
		// dispacher=despachador, que el jsp devuelva la respuesta. El forward pasa la
		// respuesta a jsp.
		request.getRequestDispatcher("/usuario.jsp").forward(request, response);
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		doGet(request, response);
	}

}
